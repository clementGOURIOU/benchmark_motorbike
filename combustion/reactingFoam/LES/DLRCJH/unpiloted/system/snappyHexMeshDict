/*--------------------------------*- C++ -*----------------------------------*\
 =========                |
 \      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
  \    /   O peration     | Website:  https://openfoam.org
   \  /    A nd           | Version:  dev                                   
    \/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      snappyHexMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Which of the steps to run
castellatedMesh true; 
snap            true;
addLayers       true;

geometry
{
    DLRCJH.stl
    {
        type triSurfaceMesh;
        name DLRCJH;
    }
/*
    refineCylinder
    {
        type searchableCylinder;
        point1 (-0.4    -0.00999  0);
        point2 (-0.0035 -0.00999  0);
        radius 0.041;
    }
*/
    refineChamberExternal
    {
        type searchableBox;
        min (0.0025 -0.043 -0.038);
        max (0.390   0.022  0.038);
    }
/*
    refineChamberInternal
    {
        type searchableBox;
        min (0.0035 -0.0415 -0.035);
        max (0.300   0.016   0.035);
    }
*/
};

// Settings for the castellatedMesh generation.
castellatedMeshControls
{
    // Refinement parameters
    // ~~~~~~~~~~~~~~~~~~~~~

    maxLocalCells 10000000;
    maxGlobalCells 100000000;
    minRefinementCells 20;
    maxLoadUnbalance 0.10;

    nCellsBetweenLevels 3;

    features
    (
        {
            file "DLRCJH.eMesh";
            level 1;
        }
    );

    refinementSurfaces
    {
        DLRCJH    
        { 
            level (1 2); 
            patchInfo 
            { 
                type wall; 
            } 
        }
    }

    // Resolve sharp angles
    resolveFeatureAngle 30;

    refinementRegions
    {
/*
        refineCylinder
        {
            mode inside;
            levels ((1e-5 1));
        }
*/
        refineChamberExternal
        {
            mode inside;
            levels ((1e-5 1));
        }
/*
        refineChamberInternal
        {
            mode inside;
            levels ((1e-5 2));
        }
*/
    }

    locationInMesh (0.005123 0.000123 0.000123);
    allowFreeStandingZoneFaces true;
}

// Settings for the snapping.
snapControls
{
    nSmoothPatch 4;
    tolerance 1.0;
    nSolveIter 100;
    nRelaxIter 5;

    nFeatureSnapIter 10;
    implicitFeatureSnap false;
    explicitFeatureSnap true;
    multiRegionFeatureSnap true; //false;
}

// Settings for the layer addition.
addLayersControls
{
    relativeSizes true;
    expansionRatio 1.1;

    finalLayerThickness 0.8;
    minThickness 0.1;
    nGrow 0;

    layers
    {
        DLRCJH
        {
            nSurfaceLayers 2;
        }
    }

    featureAngle 310;
    slipFeatureAngle 30;
    nRelaxIter 3;
    nSmoothSurfaceNormals 1;

    nSmoothNormals 3;
    nSmoothThickness 10;
    maxFaceThicknessRatio 0.5;
    maxThicknessToMedialRatio 0.3;
    minMedianAxisAngle 90;
    nBufferCellsNoExtrude 0;
    nLayerIter 50;
}

// Generic mesh quality settings. At any undoable phase these determine
// where to undo.
meshQualityControls
{
    //- Maximum non-orthogonality allowed. Set to 180 to disable.
    maxNonOrtho 65;

    //- Max skewness allowed. Set to <0 to disable.
    maxBoundarySkewness 4;
    maxInternalSkewness 1;

    //- Max concaveness allowed. Is angle (in degrees) below which concavity
    //  is allowed. 0 is straight face, <0 would be convex face.
    //  Set to 180 to disable.
    maxConcave 80;

    //- Minimum pyramid volume. Is absolute volume of cell pyramid.
    //  Set to a sensible fraction of the smallest cell volume expected.
    //  Set to very negative number (e.g. -1E30) to disable.
    minVol 1e-13;

    //- Minimum quality of the tet formed by the face-centre
    //  and variable base point minimum decomposition triangles and
    //  the cell centre. This has to be a positive number for tracking
    //  to work. Set to very negative number (e.g. -1E30) to
    //  disable.
    //     <0 = inside out tet,
    //      0 = flat tet
    //      1 = regular tet
    minTetQuality 1e-30;

    //- Minimum face area. Set to <0 to disable.
    minArea -1;

    //- Minimum face twist. Set to <-1 to disable. dot product of face normal
    //- and face centre triangles normal
    minTwist 0.02;

    //- minimum normalised cell determinant
    //- 1 = hex, <= 0 = folded or flattened illegal cell
    minDeterminant 0.001;

    //- minFaceWeight (0 -> 0.5)
    minFaceWeight 0.05;

    //- minVolRatio (0 -> 1)
    minVolRatio 0.01;

    //must be >0 for Fluent compatibility
    minTriangleTwist -1;

    // Advanced

    //- Number of error distribution iterations
    nSmoothScale 4;
    //- amount to scale back displacement at error points
    errorReduction 0.75;
}

// Advanced

// Flags for optional output
// 0 : only write final meshes
// 1 : write intermediate meshes
// 2 : write volScalarField with cellLevel for postprocessing
// 4 : write current intersections as .obj files
debug 0;

// Merge tolerance. Is fraction of overall bounding box of initial mesh.
// Note: the write tolerance needs to be higher than this.
mergeTolerance 1e-6;

// ************************************************************************* //
