/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2206                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include "<case>/parameters"

application     sprayFoam;

startFrom       startTime;

startTime       0;

stopAt          endTime;

endTime         1.5e-03;

deltaT          #eval{ 2e-07 / $nref};

writeControl    runTime;

writeInterval   5e-5;

purgeWrite      10;

writeFormat     binary;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable false;

adjustTimeStep  false;

functions
{
    BilgerMixtureFraction1
    {
        type            BilgerMixtureFraction;
        libs            (fieldFunctionObjects);

        fuel
        {
            composition moleFractions;
            C12H26      1;
        }

        oxidiser
        {
            composition massFractions;
            N2          0.8971;
            H2O         0.0377;
            CO2         0.0652;
        }

        result          mixtureFraction;
        executeControl  timeStep;
        executeInterval 1;
        writeControl    writeTime;
    }

    fieldExtents1
    {
        type            fieldExtents;
        libs            (fieldFunctionObjects);

        fields          ( mixtureFraction );
        threshold       0.001; // 0.1% of 1

        internalField   true;
        referencePosition   (0 0 0);

        writePrecision  8;
        writeToFile     true;
        executeControl  timeStep;
        executeInterval 1;
        writeControl    timeStep;
        writeInterval   1;
    }

    fieldExtents2
    {
        ${fieldExtents1}
        fields          ( C12H26 );
        threshold       0.000999999; // ~0.1% of 1 - non-reacting
    }

    fieldExtents3
    {
        ${fieldExtents1}
        fields          ( C12H26 );
        threshold       0.001; // 0.1% of 1 - non-reacting
    }

    fieldMinMax1
    {
        type        fieldMinMax;
        libs        (fieldFunctionObjects);

        mode        magnitude;
        fields      ( C12H26 U mixtureFraction T );
        location    true;

        executeControl  timeStep;
        executeInterval 1;
        writeControl    timeStep;
        writeInterval   1;
    }

    cuttingPlane
    {
        type            surfaces;
        libs            (sampling);
        surfaceFormat   vtk;
        fields          ( C12H26 U mixtureFraction T );
        interpolationScheme cellPoint;
        executeControl  writeTime;
        writeControl    writeTime;

        surfaces
        (
            yNormal
            {
                type            cuttingPlane;
                planeType       pointAndNormal;
                pointAndNormalDict
                {
                    point           (0 0 0);
                    normal          (0 1 0);
                }
                interpolate     true;
            }
            zNormal
            {
                type            cuttingPlane;
                planeType       pointAndNormal;
                pointAndNormalDict
                {
                    point           (0 0 0);
                    normal          (0 0 1);
                }
                interpolate     true;
            }
        );
    }
}

// ************************************************************************* //
