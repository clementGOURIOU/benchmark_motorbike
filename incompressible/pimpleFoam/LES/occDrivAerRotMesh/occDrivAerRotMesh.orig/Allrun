#!/bin/bash -l
### Script for running the open-closed coolings DrivAer with a
### rotating mesh
### Upstream CFD, 2022

# This application has been developed as part of the exaFOAM Project
# https://www.exafoam.eu, which has received funding from the European
# High-Performance Computing Joint Undertaking (JU) under grant
# agreement No 956416. The JU receives support from the European Union's
# Horizon 2020 research and innovation programme and France, Germany,
# Italy, Croatia, Spain, Greece, and Portugal.

# Based on the geometry of the AutoCFD2 Workshop:
# Hupertz, B., Chalupa, K., Krueger, L., Howard, K., Glueck, H.-D., Lewington, N., . . . Shin, Y.-s. (2021). On the Aerodynamics of the Notchback Open Cooling DrivAer: A Detailed Investigation of Wind Tunnel Data for Improved Correlation and Reference. SAE Int. J. Adv. & Curr. Prac. in Mobility, 3(4), 1726-1747. doi:https://doi.org/10.4271/2021-01-0958

#SBATCH --job-name "Test_drivAer"
#SBATCH --nodes=4
#SBATCH --ntasks-per-node=32
#SBATCH --time=7-00:00:00
#SBATCH --partition=long
#SBATCH --mail-type=NONE
#SBATCH --account=eubm_2021_exafoam


### What to run
## Beware that the RANS is meant to run in isolation. The initial DDES removes
## all previous results.
run_initial_RANS=false
run_initial_DDES=true
run_productive_DDES=false

### Solver
solverLES="pimpleFoam"
solverRANS="simpleFoam"

### Used directories
logDir="logFiles"

# function to read parameters from caseDefinition...
function getInputParam () 
{
    varVal=`grep -w ${1} system/include/caseDefinition | cut -d ";" -f 1 | grep -v '//'`
    varVal=`echo ${varVal:${#1}}`
    echo $varVal
}

# get input parameters
nProcs=`getInputParam nCores`
TIMESTAMP=$(date "+%Y-%m-%d_%H-%M-%S")

#parEx="mpirun -np $nProcs"
parEx="srun"

module load gnu/11
module load openmpi/3
module load OpenFOAM/v2106

. ${WM_PROJECT_DIR:?}/bin/tools/RunFunctions


if $run_initial_RANS; then
    echo "Running initial RANS ..."
    mkdir $logDir
    
    # ---- initialise & run simulation
    cp system/controlDict.RANS system/controlDict
    cp system/fvSchemes.RANS system/fvSchemes
    cp system/fvSolution.RANS system/fvSolution
    cp constant/MRFProperties.orig constant/MRFProperties
    cp constant/turbulenceProperties.RANS constant/turbulenceProperties

	restore0Dir -processor
    $parEx potentialFoam -initialiseUBCs -parallel > $logDir/21_potentialFoam.log 2>&1 || exit 1
    $parEx applyBoundaryLayer -ybl "0.0450244" -parallel > $logDir/22_applyBoundaryLayer.log 2>&1 || exit 1

    $parEx $solverRANS -parallel > $logDir/23_$solverRANS.$TIMESTAMP.log 2>&1 || exit 1
    echo "... done!"
fi

if $run_initial_DDES; then
    echo "Running initial DDES ..."
    
    # ---- initialise & run simulation
    rm -f constant/MRFProperties
    foamListTimes -processor -rm 
    cp system/controlDict.DDES.init system/controlDict
    cp system/fvSchemes.DDES system/fvSchemes
    cp system/fvSolution.DDES system/fvSolution
    cp constant/dynamicMeshDict.orig constant/dynamicMeshDict
    cp constant/turbulenceProperties.LES constant/turbulenceProperties

	restore0Dir -processor
    $parEx potentialFoam -initialiseUBCs -parallel > $logDir/21_potentialFoam.log 2>&1 || exit 1
    $parEx applyBoundaryLayer -ybl "0.0450244" -parallel > $logDir/22_applyBoundaryLayer.log 2>&1 || exit 1

    $parEx $solverLES -parallel > $logDir/23_$solverLES.$TIMESTAMP.log 2>&1 || exit 1
    echo "... done!"
fi

if $run_productive_DDES; then
    echo "Running productive DDES ..."
    
    # ---- initialise & run simulation
    rm -f constant/MRFProperties
    cp system/controlDict.DDES.avg system/controlDict
    cp system/fvSchemes.DDES system/fvSchemes
    cp system/fvSolution.DDES system/fvSolution
    cp constant/dynamicMeshDict.orig constant/dynamicMeshDict
    cp constant/turbulenceProperties.LES constant/turbulenceProperties

    $parEx $solverLES -parallel > $logDir/24_$solverLES.$TIMESTAMP.log 2>&1 || exit 1

    echo "... done!"
fi

# ----------------------------------------------------------------- end-of-file                                                                
