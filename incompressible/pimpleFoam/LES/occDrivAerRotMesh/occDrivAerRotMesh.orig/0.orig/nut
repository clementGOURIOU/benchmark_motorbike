/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      nut;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include        "${FOAM_CASE}/system/include/caseDefinition"

// calculate nut value at inlet
nutref          #eval{ $viscRatio * $nu };

dimensions      [ 0 2 -1 0 0 0 0 ];
internalField   uniform $nutref;

boundaryField
{
    #includeEtc "caseDicts/setConstraintTypes"
    $inletPatch		//Inlet
    {
        type            calculated;
        value           $internalField;
    }

    $outletPatch		//Outlet
    {
        type            calculated;
        value           $internalField;
    }
    "Plinth.*" //"(TirePlinthfront|TirePlinthrear)"
    {
        type            nutUSpaldingWallFunction;
        value           $internalField;
        tolerance       1e-9;
    }
    $fixedWallPatches
    {
        type            nutUSpaldingWallFunction;
        value           $internalField;
        tolerance       1e-9;

    }

    $rotatingWallPatches
    {
        type            nutUSpaldingWallFunction;
        value           $internalField;
        tolerance       1e-9;
    }
    $rotatingWallPatchesRear
    {
        type            nutUSpaldingWallFunction;
        value           $internalField;
        tolerance       1e-9;
    }

    $movingMeshWallPatches
    {
        type            nutUSpaldingWallFunction;
        value           $internalField;
        tolerance       1e-9;
    }
    $movingGroundWallPatches
    {
        type            nutUSpaldingWallFunction;
        value           $internalField;
        tolerance       1e-9;
    }
    $symmPatches
    {
        type            symmetry;
    }
}

// ************************************************************************* //
