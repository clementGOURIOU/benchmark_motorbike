/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2306                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      surfaceFeatureExtractDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

WTUN0000_WindTunnel.obj
{
    // How to obtain raw features (extractFromFile || extractFromSurface)
    extractionMethod    extractFromSurface;

    extractFromSurfaceCoeffs
    {
        // Mark edges whose adjacent surface normals are at an angle less
        // than includedAngle as features
        // - 0  : selects no edges
        // - 180: selects all edges
        includedAngle       150;

        // Do not mark region edges
        //geometricTestOnly yes;
    }

    subsetFeatures
    {
        // Keep nonManifold edges (edges with >2 connected faces)
        nonManifoldEdges    no;

        // Keep open edges (edges with 1 connected face)
        openEdges           yes;

        // Use a plane to select feature edges (normal)(basePoint)
        // Keep only edges that intersect the plane will be included
        //plane             (1 0 0)(0 0 0);

        // Select feature edges using a box (minPt)(maxPt)
        // Keep edges inside the box:
        //insideBox         (0 0 0)(1 1 1);
        // Keep edges outside the box:
        //outsideBox        (0 0 0)(1 1 1);
    }

    trimFeatures
    {
        // Remove features with fewer than the specified number of edges
        //minElem   5;

        // Remove features shorter than the specified cumulative length
        //minLen    0.05;
    }

    // Write options

    // Write features to obj format for postprocessing
    writeObj                yes;

    // Output the curvature of the surface
    //curvature             yes;

    // Output the proximity of feature points and edges to each other
    //featureProximity      yes;

    // Output the closeness of surface elements to other surface elements.
    //closeness             yes;

    // The maximum search distance to use when looking for other feature points and edges
    //maxFeatureProximity   1;

    // Write surface proximity and curvature fields to vtk format for postprocessing
    //writeVTK              yes;
}

// ************************************************************************* //
