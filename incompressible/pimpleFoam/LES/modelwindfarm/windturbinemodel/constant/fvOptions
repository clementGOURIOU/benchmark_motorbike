/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2212                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvOptions;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

disk1
{
    type            rotorDisk;

    selectionMode   cellSet;
    cellSet         actuationDisk1;

    fields          (U);    // names of fields on which to apply source
    nBlades         3;      // number of blades
    tipEffect       0.96;   // normalised radius above which lift = 0

    inletFlowType   local;  // inlet flow type specification

    geometryMode    specified;   // geometry specification

    origin          (3.0 0.9 0.125);
    axis            (1 0 0);

    refDirection    (0 1 0); // reference direction
			      // - used as reference for psi angle

    rhoRef          1.18;

    rpm             1120;

    trimModel       fixedTrim;  // fixed || targetForce

    fixedTrimCoeffs
    {
         theta0         0;
         theta1c        0;
         theta1s        0;
    }

    flapCoeffs
    {
	beta0           0;  // coning angle [deg]
	beta1c          0;  // lateral flapping coeff (cos coeff)
	beta2s          0;  // longitudinal flapping coeff (sin coeff)
    }

    blade
    {
	// see bladeModel.H for documentation --> profile1 (radius1(m) twist1(deg) chord1(m))
	data
	(
            (profile1 (0.01       -20.50      0.0139 )   ) 
            (profile1 (0.02       -20.9       0.0147 )   )
            (profile1 (0.03       -19.83      0.0147 )   ) 
            (profile1 (0.04       -16.91      0.0141 )   ) 
            (profile1 (0.05       -13.19      0.0131 )   ) 
            (profile1 (0.06       -10.67      0.0118 )   ) 
            (profile1 (0.07       -9.12       0.0102 )   ) 
            (profile1 (0.075      -6.66       0.0060 )   ) 
	);
    }

    profiles
    {
	profile1
	{
	    type    lookup; // lookup || series
	    // see lookupProfile.H or seriesProfile.H for documentation --> (AngleOfAtack(deg) C_drag C_lift) 
            data
            (
		(-180.000000 0.276289 0.000000)
		(-178.571429 0.276949 0.049350)
		(-177.142857 0.278927 0.098700)
		(-175.714286 0.282218 0.148050)
		(-174.285714 0.286812 0.197400)
		(-172.857143 0.292698 0.246750)
		(-171.428571 0.299859 0.296100)
		(-170.000000 0.308276 0.345450)
		(-168.571429 0.317925 0.394800)
		(-167.142857 0.328780 0.444150)
		(-165.714286 0.340812 0.493500)
		(-164.285714 0.353988 0.542850)
		(-162.857143 0.368271 0.592200)
		(-161.428571 0.383622 0.641550)
		(-160.000000 0.400000 0.690900)
		(-155.000000 0.464730 0.638617)
		(-150.000000 0.539273 0.608288)
		(-145.000000 0.621111 0.585404)
		(-140.000000 0.707461 0.562463)
		(-135.000000 0.795366 0.535285)
		(-130.000000 0.881784 0.501556)
		(-125.000000 0.963685 0.460151)
		(-120.000000 1.038144 0.410796)
		(-115.000000 1.102437 0.353869)
		(-110.000000 1.154123 0.290267)
		(-105.000000 1.191124 0.221307)
		(-100.000000 1.211793 0.148641)
		(-95.000000 1.214965 0.074175)
		(-90.000000 1.200000 0.000000)
		(-85.000000 1.214965 -0.074175)
		(-80.000000 1.211793 -0.148641)
		(-75.000000 1.191124 -0.221307)
		(-70.000000 1.154123 -0.290267)
		(-65.000000 1.102437 -0.353869)
		(-60.000000 1.038144 -0.410796)
		(-55.000000 0.963685 -0.460151)
		(-50.000000 0.881784 -0.501556)
		(-45.000000 0.795366 -0.535285)
		(-40.000000 0.707461 -0.562463)
		(-35.000000 0.621111 -0.585404)
		(-30.000000 0.539273 -0.608288)
		(-25.000000 0.464730 -0.638617)
		(-20.000000 0.402000 -0.572000)
		(-18.000000 0.321000 -0.555000)
		(-16.000000 0.251000 -0.536000)
		(-14.000000 0.228000 -0.512000)
		(-12.000000 0.203000 -0.488000)
		(-10.000000 0.176000 -0.464000)
		(-8.000000 0.153000 -0.424000)
		(-6.000000 0.135000 -0.370000)
		(-4.000000 0.114000 -0.240000)
		(-2.000000 0.092000 -0.083000)
		(0.000000 0.081000 0.132000)
		(2.000000 0.073000 0.354000)
		(4.000000 0.083000 0.591000)
		(6.000000 0.136000 0.804000)
		(8.000000 0.307000 0.957000)
		(10.000000 0.400000 1.032000)
		(12.000000 0.400000 1.016000)
		(14.000000 0.400000 0.995000)
		(16.000000 0.400000 0.971000)
		(18.000000 0.400000 0.976000)
		(20.000000 0.400000 0.987000)
		(25.000000 0.464730 0.912310)
		(30.000000 0.539273 0.868983)
		(35.000000 0.621111 0.836292)
		(40.000000 0.707461 0.803518)
		(45.000000 0.795366 0.764693)
		(50.000000 0.881784 0.716509)
		(55.000000 0.963685 0.657358)
		(60.000000 1.038144 0.586851)
		(65.000000 1.102437 0.505527)
		(70.000000 1.154123 0.414667)
		(75.000000 1.191124 0.316153)
		(80.000000 1.211793 0.212344)
		(85.000000 1.214965 0.105965)
		(90.000000 1.200000 0.000000)
		(95.000000 1.214965 -0.074175)
		(100.000000 1.211793 -0.148641)
		(105.000000 1.191124 -0.221307)
		(110.000000 1.154123 -0.290267)
		(115.000000 1.102437 -0.353869)
		(120.000000 1.038144 -0.410796)
		(125.000000 0.963685 -0.460151)
		(130.000000 0.881784 -0.501556)
		(135.000000 0.795366 -0.535285)
		(140.000000 0.707461 -0.562463)
		(145.000000 0.621111 -0.585404)
		(150.000000 0.539273 -0.608288)
		(155.000000 0.464730 -0.638617)
		(160.000000 0.400000 -0.690900)
		(161.428571 0.383622 -0.641550)
		(162.857143 0.368271 -0.592200)
		(164.285714 0.353988 -0.542850)
		(165.714286 0.340812 -0.493500)
		(167.142857 0.328780 -0.444150)
		(168.571429 0.317925 -0.394800)
		(170.000000 0.308276 -0.345450)
		(171.428571 0.299859 -0.296100)
		(172.857143 0.292698 -0.246750)
		(174.285714 0.286812 -0.197400)
		(175.714286 0.282218 -0.148050)
		(177.142857 0.278927 -0.098700)
		(178.571429 0.276949 -0.049350)
		(180.000000 0.276289 0.000000)

            );
	}
    }
}

// ************************************************************************* //
